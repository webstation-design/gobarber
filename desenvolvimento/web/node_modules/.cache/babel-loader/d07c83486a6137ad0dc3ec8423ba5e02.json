{"ast":null,"code":"var _jsxFileName = \"D:\\\\Trabalhos\\\\webstation\\\\gobarber\\\\desenvolvimento\\\\web\\\\src\\\\routes\\\\Route.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthLayout from \"../pages/_layouts/auth\";\nimport DefaultLayout from \"../pages/_layouts/default\";\nimport { store } from \"../store\";\nexport default function RouteWrapper({\n  component: Component,\n  isPrivate,\n  ...rest\n}) {\n  const {\n    signed\n  } = store.getState().auth;\n\n  if (!signed && isPrivate) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (signed && !isPrivate) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const Layout = signed ? DefaultLayout : AuthLayout;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => /*#__PURE__*/React.createElement(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }));\n}\nRouteWrapper.propTypes = {\n  isPrivate: PropTypes.bool,\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired\n};\nRouteWrapper.defaultProps = {\n  isPrivate: false\n};","map":{"version":3,"sources":["D:/Trabalhos/webstation/gobarber/desenvolvimento/web/src/routes/Route.js"],"names":["React","PropTypes","Route","Redirect","AuthLayout","DefaultLayout","store","RouteWrapper","component","Component","isPrivate","rest","signed","getState","auth","Layout","props","propTypes","bool","oneOfType","element","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,SAASC,KAAT,QAAsB,UAAtB;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,SAAS,EAAEC,SADwB;AAEnCC,EAAAA,SAFmC;AAGnC,KAAGC;AAHgC,CAAtB,EAIZ;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAaN,KAAK,CAACO,QAAN,GAAiBC,IAApC;;AAEA,MAAI,CAACF,MAAD,IAAWF,SAAf,EAA0B;AACxB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,MAAIE,MAAM,IAAI,CAACF,SAAf,EAA0B;AACxB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,QAAMK,MAAM,GAAGH,MAAM,GAAGP,aAAH,GAAmBD,UAAxC;AAEA,sBACE,oBAAC,KAAD,oBACMO,IADN;AAEE,IAAA,MAAM,EAAEK,KAAK,iBACX,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD,oBAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAWD;AAEDT,YAAY,CAACU,SAAb,GAAyB;AACvBP,EAAAA,SAAS,EAAET,SAAS,CAACiB,IADE;AAEvBV,EAAAA,SAAS,EAAEP,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACmB,OAAX,EAAoBnB,SAAS,CAACoB,IAA9B,CAApB,EAAyDC;AAF7C,CAAzB;AAKAf,YAAY,CAACgB,YAAb,GAA4B;AAC1Bb,EAAAA,SAAS,EAAE;AADe,CAA5B","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport AuthLayout from '~/pages/_layouts/auth';\r\nimport DefaultLayout from '~/pages/_layouts/default';\r\n\r\nimport { store } from '~/store';\r\n\r\nexport default function RouteWrapper({\r\n  component: Component,\r\n  isPrivate,\r\n  ...rest\r\n}) {\r\n  const { signed } = store.getState().auth;\r\n\r\n  if (!signed && isPrivate) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (signed && !isPrivate) {\r\n    return <Redirect to=\"/dashboard\" />\r\n  }\r\n\r\n  const Layout = signed ? DefaultLayout : AuthLayout;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => (\r\n        <Layout>\r\n          <Component  {...props} />\r\n        </Layout>\r\n      )}\r\n    />\r\n  )\r\n\r\n}\r\n\r\nRouteWrapper.propTypes = {\r\n  isPrivate: PropTypes.bool,\r\n  component: PropTypes.oneOfType([PropTypes.element, PropTypes.func]).isRequired,\r\n};\r\n\r\nRouteWrapper.defaultProps = {\r\n  isPrivate: false,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}